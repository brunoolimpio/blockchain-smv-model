MODULE showBalance(id) -- Registro de saldos de cada id
	VAR
		balance : array 1..3 of array 1..2 of integer;

MODULE createTransaction (from, to, amount)

	VAR
		hasBalance : boolean;

	DEFINE
		hasBalance :=  balance [from][2] >= amount; -- o remetente tem saldo?


MODULE encrypt(transaction, public_key)

	VAR 
		encryptedTransaction: integer;

	DEFINE
		encryptedTransaction := transaction + public_key;	

MODULE createBlock (id, timestamp, data, blockHash, previousHash)

	VAR
		id := integer
		timestamp := integer
		data := array 1..5 of ???
		blockHash : ??? 			--- Qual o tipo para hash?
		previousBlockHash : ???


	ASSIGN
		next(id) := id + 1


MODULE broadcastBlock(id)	--- Rede P2P
	
	VAR
		isValid : boolean;
		wasSent : boolean;


	DEFINE
		isValid :=   -- isValid if the id = previous_id + 1.

		send := 	-- send the block to the other nodes.

		wasSent :=  -- check a block in order to verify if it was already sent.




-- Pensar na definição da rede peer-to-peer
	-- Estudar tipos de conjuntos no SMV
	


MAIN

-- Gerar 1ª transação sem remetente, para alguém (Genesis)


